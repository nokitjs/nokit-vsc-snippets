{
    "nokit-filter": {
        "prefix": "nokit-filter",
        "body": [
            "/**",
            " * ${The}Filter",
            " **/",
            "var ${The}Filter = function () { };",
            "",
            "/**",
            " * 请求开始时触发",
            " **/",
            "${The}Filter.prototype.onRequestBegin = function (context, next) {",
            "    next();",
            "};",
            "",
            "/**",
            " * 收到数据时触发",
            " **/",
            "${The}Filter.prototype.onReceived = function (context, next) {",
            "    next();",
            "};",
            "",
            "/**",
            " * 开始响应时触发",
            " **/",
            "${The}Filter.prototype.onResponse = function (context, next) {",
            "    next();",
            "};",
            "",
            "/**",
            " * 请求结束时触发",
            " **/",
            "${The}Filter.prototype.onRequestEnd = function (context, next) {",
            "    next();",
            "};",
            "",
            "/**",
            " * 发生异常时触发",
            " **/",
            "${The}Filter.prototype.onError = function (context, next) {",
            "    next();",
            "};",
            "",
            "//exports",
            "module.exports = ${The}Filter;",
            "",
            "$0"
        ],
        "description": "Nokit Filter"
    },
    "nokit-global": {
        "prefix": "nokit-global",
        "body": [
            "/**",
            " * 全局应用程序类",
            " **/",
            "var Global = function () { };",
            "",
            "/**",
            " * 应用启动时触发",
            " **/",
            "Global.prototype.onStart = function (server, done) {",
            "    done();",
            "};",
            "",
            "/**",
            " * 应用停止时触发",
            " **/",
            "Global.prototype.onStop = function (server, done) {",
            "    done();",
            "};",
            "",
            "/**",
            " * 发生异常时触发",
            " **/",
            "Global.prototype.onError = function (context, done) {",
            "    done();",
            "};",
            "",
            "/**",
            " * 请求开始时触发",
            " **/",
            "Global.prototype.onRequestBegin = function (context, done) {",
            "    done();",
            "};",
            "",
            "/**",
            " * 收到数据时触发",
            " **/",
            "Global.prototype.onReceived = function (context, done) {",
            "    done();",
            "};",
            "",
            "/**",
            " * 开始响应时触发",
            " **/",
            "Global.prototype.onResponse = function (context, done) {",
            "    done();",
            "};",
            "",
            "/**",
            " * 请求结束时触发",
            " **/",
            "Global.prototype.onRequestEnd = function (context, done) {",
            "    done();",
            "};",
            "",
            "module.exports = Global;",
            "",
            "$0"
        ],
        "description": "Nokit Global"
    },
    "nokit-mvc-controller": {
        "prefix": "nokit-mvc-controller",
        "body": [
            "/**",
            " * ${The}Controller",
            " **/",
            "var ${The}Controller = function () { };",
            "",
            "/**",
            " * 初始化方法，每次请求都会先执行 init 方法",
            " **/",
            "${The}Controller.prototype.init = function () {",
            "    var self = this;",
            "    self.ready();",
            "}",
            "",
            "/**",
            " * 默认 action",
            " **/",
            "${The}Controller.prototype.index = function () {",
            "    var self = this;",
            "    self.render(\"view\");",
            "}",
            "",
            "module.exports = ${The}Controller;",
            "",
            "$0"
        ],
        "description": "Nokit MVC Controller"
    },
    "nokit-nsp-presenter": {
        "prefix": "nokit-nsp-presenter",
        "body": [
            "/**",
            " * ${The}Presenter",
            " **/",
            "var ${The}Presenter = function () { };",
            "",
            "/**",
            " * 初始化方法，每次请求都会先执行 init 方法",
            " **/",
            "${The}Presenter.prototype.init = function () {",
            "    var self = this;",
            "    self.ready();",
            "};",
            "",
            "/**",
            " * 默认方法，首次打开页面，会触发 load 方法",
            " **/",
            "${The}Presenter.prototype.load = function () {",
            "    var self = this;",
            "    self.render();",
            "};",
            "",
            "/**",
            " * 事件方法，可以绑定到页面中的 html 控件",
            " **/",
            "${The}Presenter.prototype.test = function () {",
            "    var self = this;",
            "    self.render();",
            "};",
            "",
            "module.exports = ${The}Presenter;",
            "",
            "$0"
        ],
        "description": "Nokit NSP Presenter"
    },
    "nokit-restful-controller": {
        "prefix": "nokit-restful-controller",
        "body": [
            "/**",
            " * ${The}Controller",
            " **/",
            "var ${The}Controller = function () { };",
            "",
            "/**",
            " * 初始化方法，每次请求都会先执行 init 方法",
            " **/",
            "${The}Controller.prototype.init = function () {",
            "    var self = this;",
            "    self.ready();",
            "}",
            "",
            "/**",
            " * Create (POST)",
            " **/",
            "${The}Controller.prototype.post = function () {",
            "    var self = this;",
            "    self.out({});",
            "}",
            "",
            "/**",
            " * Read (GET)",
            " **/",
            "${The}Controller.prototype.get = function () {",
            "    var self = this;",
            "    self.out({});",
            "}",
            "",
            "/**",
            " * Update (PUT)",
            " **/",
            "${The}Controller.prototype.put = function () {",
            "    var self = this;",
            "    self.out({});",
            "}",
            "",
            "/**",
            " * Delete (DELETE)",
            " **/",
            "${The}Controller.prototype.delete = function () {",
            "    var self = this;",
            "    self.out({});",
            "}",
            "",
            "module.exports = ${The}Controller;",
            "",
            "$0"
        ],
        "description": "Nokit RESTful Controller"
    }
}